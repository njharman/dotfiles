#!/bin/bash
# Create tmux "workspaces"

# Kept so I don't hafta google how to do this again.
# while getopts "b" option; do
#     case $option in
#         b) build_host='true';;
#     esac
# done
# shift $((OPTIND-1))


if [[ "$2" == "" ]]; then
    session="amadeus"  # Default 'rockme' session.
else
    session="$1"
    shift
fi

if [[ "$1" == "" ]]; then
    echo Read the source.
    exit
else
    target="$1"
fi


# ud == Ubuntu Desktop, my main workstation either bare metal or virtual machine.
if [[ "${target:0:2}" == "ud" ]]; then
    ## New local 3way
    tmux new-window    -n "$target"
    tmux split-window  -t "$session:$target".1 -v -l 30
    tmux split-window  -t "$session:$target".1 -h -l 100
    tmux select-pane   -t "$session:$target".1
elif [[ "$target" == "bws" ]]; then
    ## 4 way bws machines
    tmux new-window    -n "$target" "ssh bws-control1"
    tmux split-window  -t "$session:$target".1 -v -l 40  "ssh bws-compute3"
    tmux split-window  -t "$session:$target".1 -h -l 110 "ssh bws-network1"
    tmux split-window  -t "$session:$target".2 -h -l 110 "ssh bws-compute1"
    tmux split-window  -t "$session:$target".2 -v -l 20  "ssh bws-compute4"
    tmux split-window  -t "$session:$target".4 -v -l 20  "ssh bws-compute2"
    sleep 1
    tmux send-keys     -t "$sesion:$target".1 'sudo bash' C-m
    tmux send-keys     -t "$sesion:$target".2 'sudo bash' C-m
    tmux send-keys     -t "$sesion:$target".3 'sudo bash' C-m
    tmux send-keys     -t "$sesion:$target".4 'sudo bash' C-m
    tmux send-keys     -t "$sesion:$target".5 'sudo bash' C-m
    tmux send-keys     -t "$sesion:$target".6 'sudo bash' C-m
    tmux select-pane   -t "$session:$target".1
elif [[ "$target" == "vroom" ]]; then
    # web/db performance view
    # bwayweb atop left
    tmux new-window   -n "$target" "ssh root@bwayweb"
    sleep 1
    tmux send-keys    -t "$sesion:$target".1 'atop' C-m
    # apachetop wide
    tmux split-window -t "$sesion:$target".1 -dv -l 30 "ssh root@bwayweb"
    sleep 1
    tmux send-keys    -t "$sesion:$target".2 'cd /var/log/apache2;apachetop -ld1 -f access.bway.log -f error.bway.log' C-m
    # pg top wide
    tmux split-window -t "$sesion:$target".2 -dv -l 15 "ssh root@bwaywebdb"
    sleep 1
    tmux send-keys    -t "$sesion:$target".2 'pg_activity -h ""' C-m
    # bwaywebdb atop right
    tmux split-window -t "$sesion:$target".1 -dh -p 50 "ssh root@bwaywebdb"
    sleep 1
    tmux send-keys    -t "$sesion:$target".2 'atop' C-m
else
    # "work" pane
    tmux new-window   -n "$target" "ssh $target"
    # wide log below
    if [[ "$target" == "bwayweb" ]]; then
        tmux split-window -t "$sesion:$target".1 -dv -l 20 "ssh root@$target"
        sleep 1
        tmux send-keys    -t "$sesion:$target".2 'cd /var/log/apache2;apachetop -ld1 -f access.bway.log -f error.bway.log' C-m
    elif [[ "$target" == "bwaywebdb" ]]; then
        tmux split-window -t "$sesion:$target".1 -dv -l 20 "ssh root@$target"
        sleep 1
        tmux send-keys    -t "$sesion:$target".2 'pg_activity -h ""' C-m
    else
        tmux split-window -t "$sesion:$target".1 -dv -l 20 "ssh $target"
        sleep 1
        tmux send-keys    -t "$sesion:$target".2 'clear;cd /var/log;echo "tailing some logs";sudo tail --follow=name messages syslog kern.log' C-m
    fi
    # root shell right
    tmux split-window -t "$sesion:$target".1 -dh -p 50 "ssh $target"
    sleep 1
    tmux send-keys    -t "$sesion:$target".2 'sudo bash' C-m
fi
